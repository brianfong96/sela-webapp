// Generated by Xata Codegen 0.28.4. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "study",
    columns: [
      { name: "name", type: "string", notNull: true, defaultValue: "Untitled" },
      { name: "owner", type: "string" },
      { name: "public", type: "bool", defaultValue: "false" },
      { name: "starred", type: "bool", defaultValue: "false" },
      { name: "passage", type: "text", notNull: true, defaultValue: "1" },
    ],
  },
  {
    name: "heb_bible",
    columns: [
      { name: "hebId", type: "int" },
      { name: "book", type: "string" },
      { name: "chapter", type: "int" },
      { name: "verse", type: "int" },
      { name: "wlcWord", type: "string" },
      { name: "hebUnicode", type: "string" },
      { name: "strongNumber", type: "int" },
      { name: "gloss", type: "string" },
      { name: "morphology", type: "string" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Study = InferredTypes["study"];
export type StudyRecord = Study & XataRecord;

export type HebBible = InferredTypes["heb_bible"];
export type HebBibleRecord = HebBible & XataRecord;

export type DatabaseSchema = {
  study: StudyRecord;
  heb_bible: HebBibleRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://BiblePoetry-s-workspace-ab123i.us-east-1.xata.sh/db/main",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
